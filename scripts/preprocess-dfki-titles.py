#!/usr/bin/python

#############################################################
# Preprocessing metadata of filenames generated by 
# the DKFI crawler script 
############################################################

import sys
import os
import re
import string
from xml.etree import ElementTree 
from lemmatizer import lemmatize_file, clean_text, escape_xml_file
import lemmatizer
from split_texts import split_csv_texts

#from test.regrtest import remove

V = False # Verbose output
   

def extract_text(dfki_xml_fpath, output_fpath):
# This function extracts text from the DFKI xml file
# generated by their crawler. The function returns 
# a concatenation of filename, category, tags

    # Open files
    output_file = open(output_fpath, "w")
    tree = ElementTree.parse(dfki_xml_fpath);        
        
    # Extract text from each xml element <mediaobject> 
    mo_text = ""
    mo_count = 0
    for element in tree.getiterator():
        if element.text is None: continue
            
        if element.tag == "mediaobject":
            if mo_text == "": continue
            output_file.write(mo_text + " " + lemmatizer.SEPARATOR + "\n")
        
            mo_text = ""
            mo_count = mo_count + 1
            if (V): print "===="
        elif element.tag == "filename":
            filename = clean_text(element.text)
            mo_text = mo_text + " " + filename + " . " # + "###" 
            if (V): print element.tag, "=", filename
        elif (element.tag == "category" or element.tag == "tag") and (element.text.lower() != "none"):
            tag = clean_text(element.text.lower().strip())
            mo_text = mo_text + " " + tag                
            if (V): print element.tag, "=", tag
        
    output_file.close()
              
    print "Text from", mo_count, "mediaobjects was extracted from", dfki_xml_fpath, "to", output_fpath 

#####################################
# Entry point
#####################################

#Process parameters
PARAM_NUM = 2
if len(sys.argv) != PARAM_NUM + 1:
    print "Expected", PARAM_NUM + 1, "parameters but was", str(len(sys.argv) - 1)
    print "Usage:", sys.argv[0], "<dfki-metadata-file> <output-file>"
    print "<dfki-metadata-file>	XML file with DFKI mediaobjects metadata (UTF8)"
    print "<output-file>	XML file with lemmatized filenames (UTF8)"
    sys.exit()

# Read the command line arguments
xml_file = sys.argv[1]
output_file = sys.argv[2]

# Process the data
tmp_file_1 = output_file + ".tmp1"
tmp_file_2 = output_file + ".tmp2"
tmp_file_3 = output_file + ".csv"

escape_xml_file(xml_file, tmp_file_1)
extract_text(tmp_file_1, tmp_file_2)

# Remove duplicate lines from tmp_file_2 and write uniq to tmp_file_3
uniqlines = set(open(tmp_file_2).readlines())
bar = open(tmp_file_3, 'w')
bar.writelines(set(uniqlines))
bar.close()

split_csv_texts(tmp_file_3, tmp_file_3 + ".valid", tmp_file_3 + ".train", 0.1)
lemmatize_file(tmp_file_3 + ".valid", output_file + ".valid", True, True)
lemmatize_file(tmp_file_3 + ".train", output_file + ".train", True, True)

os.remove(tmp_file_1)
os.remove(tmp_file_2)
#os.remove(tmp_file_3)

print "Script has finished successfully."



